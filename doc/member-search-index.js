memberSearchIndex = [{"p":"Algorithm_Component","c":"API_Test_Solution","l":"API_Test_Solution()","url":"%3Cinit%3E()"},{"p":"Algorithm_Component","c":"API_Test_Validation","l":"API_Test_Validation()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"areEqual(Line2D.Float, Line2D.Float)","url":"areEqual(java.awt.geom.Line2D.Float,java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.test","c":"TestHelper","l":"areEqual(Rectangle2D.Float, Rectangle2D.Float)","url":"areEqual(java.awt.geom.Rectangle2D.Float,java.awt.geom.Rectangle2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Ausleuchtung","l":"Ausleuchtung()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"containEqualLines(List<Line2D.Float>, List<Line2D.Float>)","url":"containEqualLines(java.util.List,java.util.List)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"contains(Point2D.Float)","url":"contains(java.awt.geom.Point2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"createCandidateRectangles()"},{"p":"fernuni.propra.file_processing","c":"XmlReader","l":"createRoom()"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"EAST"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getBoundaries()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"getCandidateLamp(Rectangle2D.Float, Set<Integer>)","url":"getCandidateLamp(java.awt.geom.Rectangle2D.Float,java.util.Set)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"getCandidateLamps()"},{"p":"fernuni.propra.algorithm","c":"RectangleHelper","l":"getCenter(Rectangle2D.Float)","url":"getCenter(java.awt.geom.Rectangle2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getCorners()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForArcShape()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForArcShape(float)"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForLShape()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForLShape(float)"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForOpenRingShape()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForOpenRingShape(float)"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForPlusShape()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForPlusShape(float)"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForSquare()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForSquare(float)"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForZShape()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"getCornersForZShape(float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getDirection(Line2D.Float)","url":"getDirection(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getDistanceToNearestSouthWall(Point2D.Float)","url":"getDistanceToNearestSouthWall(java.awt.geom.Point2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getEastWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getExtendedWall(Line2D.Float)","url":"getExtendedWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getHeight()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getHorizontalWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getId()"},{"p":"fernuni.propra.algorithm","c":"RectangleHelper","l":"getIntersection(Rectangle2D.Float, Rectangle2D.Float)","url":"getIntersection(java.awt.geom.Rectangle2D.Float,java.awt.geom.Rectangle2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getIntervals(Line2D.Float)","url":"getIntervals(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getIntervals(Orientation)","url":"getIntervals(fernuni.propra.file_processing.Orientation)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getIntervalsY()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getIntervalX()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"getLampPositions()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"getLamps()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getLamps()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getNearestWall(Line2D.Float, Direction)","url":"getNearestWall(java.awt.geom.Line2D.Float,fernuni.propra.file_processing.Direction)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getNorthWalls()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"getNumberOfSwitchedOnLamps(List<Lamp>)","url":"getNumberOfSwitchedOnLamps(java.util.List)"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"getOpposite()"},{"p":"fernuni.propra.file_processing","c":"Orientation","l":"getOpposite()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getOppositeWall(Line2D.Float)","url":"getOppositeWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"getOrientation()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getOrientation(Line2D.Float)","url":"getOrientation(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"getPosition()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getRectangle(Line2D.Float)","url":"getRectangle(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"getRectangles()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getRectangles()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getShape()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getSouthWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getVerticalWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getWalls(Direction)","url":"getWalls(fernuni.propra.file_processing.Direction)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getWallSections(Line2D.Float)","url":"getWallSections(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getWallSections(Line2D.Float, Orientation)","url":"getWallSections(java.awt.geom.Line2D.Float,fernuni.propra.file_processing.Orientation)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getWestWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"getWidth()"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"hashCode()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"hasWallDirection(Line2D.Float, Direction)","url":"hasWallDirection(java.awt.geom.Line2D.Float,fernuni.propra.file_processing.Direction)"},{"p":"fernuni.propra.file_processing","c":"Orientation","l":"HORIZONTAL"},{"p":"fernuni.propra.file_processing","c":"IncorrectShapeException","l":"IncorrectShapeException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isEastWall(Line2D.Float)","url":"isEastWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isHorizontalWall(Line2D.Float)","url":"isHorizontalWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isNorthWall(Line2D.Float)","url":"isNorthWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"isOn()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"isRoomIlluminated(Map<Integer, Integer>)","url":"isRoomIlluminated(java.util.Map)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isRoomWall(Line2D.Float)","url":"isRoomWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isSouthWall(Line2D.Float)","url":"isSouthWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isVerticalWall(Line2D.Float)","url":"isVerticalWall(java.awt.geom.Line2D.Float)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"isWestWall(Line2D.Float)","url":"isWestWall(java.awt.geom.Line2D.Float)"},{"p":"Algorithm_Component","c":"LampTest","l":"Lamp_constructor_returnsBasicLamp()"},{"p":"Algorithm_Component","c":"LampTest","l":"Lamp_constructor_returnsCorrectRectanglesForPlusShapeWhenLampInCenter()"},{"p":"Algorithm_Component","c":"LampTest","l":"Lamp_constructor_returnsCorrectRectanglesForPlusShapeWhenLampInRightMiddlePart()"},{"p":"Algorithm_Component","c":"LampTest","l":"Lamp_constructor_returnsCorrectRectanglesForSquare()"},{"p":"Algorithm_Component","c":"LampTest","l":"Lamp_constructor_returnsEmptyRectangleArrayForSquareIfLampIsOutside()"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"Lamp()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"Lamp(Point2D.Float)","url":"%3Cinit%3E(java.awt.geom.Point2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"Lamp(Point2D.Float, boolean, int[])","url":"%3Cinit%3E(java.awt.geom.Point2D.Float,boolean,int[])"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"Lamp(Point2D.Float, int[])","url":"%3Cinit%3E(java.awt.geom.Point2D.Float,int[])"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"Lamp(Point2D.Float, Rectangle2D.Float[])","url":"%3Cinit%3E(java.awt.geom.Point2D.Float,java.awt.geom.Rectangle2D.Float[])"},{"p":"Algorithm_Component","c":"LampTest","l":"LampTest()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.main","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.main","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"NORTH"},{"p":"fernuni.propra.user_interface","c":"RoomView","l":"paintComponent(Graphics)","url":"paintComponent(java.awt.Graphics)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"printLamps(List<Lamp>)","url":"printLamps(java.util.List)"},{"p":"fernuni.propra.algorithm","c":"RectangleHelper","l":"RectangleHelper()","url":"%3Cinit%3E()"},{"p":"File_Processing_Component","c":"RectangleHelperTest","l":"RectangleHelperTest()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.user_interface","c":"RoomView","l":"redraw(float)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"reduceLamps(List<Lamp>, int, Map<Integer, Integer>)","url":"reduceLamps(java.util.List,int,java.util.Map)"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_CreatesCorrectRectanglesForArcShape()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_CreatesCorrectRectanglesForPlusShape()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_CreatesCorrectRectanglesForSquare()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_GeneratesRoomWithIdAnsCorners()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_GeneratesRoomWithIdAnsCornersAndLamps()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_ThrowsExceptionForLessThanFourPoints()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_ThrowsExceptionForNonRectilinearLineBetweenLastAndFirstPoint()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_constructor_ThrowsExceptionForNonRectilinearWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_contains_ReturnsFalseForPointOutsideOfRoom()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_contains_ReturnsTrueForPointInsideOfRoom()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getDirection_ReturnsCorrectDirectionForEastWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getExtendedWall_ReturnsCorrectWallForEastWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getExtendedWall_ReturnsCorrectWallForNorthWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getExtendedWall_ReturnsCorrectWallForSouthWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getExtendedWall_ReturnsCorrectWallForWestWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getHorizontalWalls_ReturnsHorizontalWalls()"},{"p":"File_Processing_Component","c":"RectangleHelperTest","l":"Room_getIntersection_returnsCorrectIntersection()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getIntervals_ReturnsCorrectXValuesForHorizontalWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getIntervalsX_ReturnsCorrectXValues()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getIntervalsX_SortsXValues()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getIntervalsY_ReturnsCorrectYValues()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getIntervalsY_SortsYValues()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getNearestWall_ReturnsCorrectEastWallForHorizontalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getNearestWall_ReturnsCorrectNorthWallForVerticalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getNearestWall_ReturnsCorrectSouthWallForVerticalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getNearestWall_ReturnsCorrectWallIfDirectionIsOppositeDirectionFromWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getNearestWall_ReturnsCorrectWestWallForHorizontalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getNearestWall_ReturnsInputIfWallDirectionIsEqualToNearestWallDirection()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getOppositeWall_ReturnsCorrectOppositeWallForEastWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getOppositeWall_ReturnsCorrectOppositeWallForNorthWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getOppositeWall_ReturnsCorrectOppositeWallForSouthWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getOppositeWall_ReturnsCorrectOppositeWallForWestWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getRectangle_ReturnsCorrectRectangleForEastWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getRectangle_ReturnsCorrectRectangleForNorthWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getRectangle_ReturnsCorrectRectangleForSouthWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getVerticalWalls_ReturnsVerticalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getWalls_ReturnsCorrectWallsByDirection()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getWallSections_ReturnsCorrectSectionsForHorizontalWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_getWallSections_ReturnsCorrectSectionsForVerticalWall()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isEastWall_ReturnsFalseForHorizontalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isEastWall_ReturnsFalseForWestWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isEastWall_ReturnsTrueForEastWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isNorthWall_ReturnsFalseForSouthWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isNorthWall_ReturnsFalseForVerticalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isNorthWall_ReturnsTrueForNorthWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isSouthWall_ReturnsFalseForNorthWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isSouthWall_ReturnsFalseForVerticalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isSouthWall_ReturnsTrueForSouthWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isWestWall_ReturnsFalseForEastWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isWestWall_ReturnsFalseForHorizontalWalls()"},{"p":"File_Processing_Component","c":"RoomTest","l":"Room_isWestWall_ReturnsTrueForWestWalls()"},{"p":"fernuni.propra.file_processing","c":"Room","l":"Room(String, List<Point2D.Float>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"Room(String, List<Point2D.Float>, List<Point2D.Float>)","url":"%3Cinit%3E(java.lang.String,java.util.List,java.util.List)"},{"p":"File_Processing_Component","c":"RoomTest","l":"RoomTest()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.user_interface","c":"RoomView","l":"RoomView(Room)","url":"%3Cinit%3E(fernuni.propra.file_processing.Room)"},{"p":"fernuni.propra.user_interface","c":"RoomView","l":"RoomView(Room, float)","url":"%3Cinit%3E(fernuni.propra.file_processing.Room,float)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"setLamps(List<Lamp>)","url":"setLamps(java.util.List)"},{"p":"fernuni.propra.file_processing","c":"Room","l":"setLamps(List<Point2D.Float>)","url":"setLamps(java.util.List)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"setOn(boolean)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"setPosition(Point2D.Float)","url":"setPosition(java.awt.geom.Point2D.Float)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"setRectangles(int[])"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"setTimeLimit(int)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"solve()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"solve(int)"},{"p":"fernuni.propra.algorithm","c":"Ausleuchtung","l":"solve(String, int)","url":"solve(java.lang.String,int)"},{"p":"fernuni.propra.algorithm","c":"IAusleuchtung","l":"solve(String, int)","url":"solve(java.lang.String,int)"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamp_returnsCorrectLampForSquare()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamps_returnsCorrectLampsForArcShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamps_returnsCorrectLampsForOpenRingShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamps_returnsCorrectLampsForPlusShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamps_returnsCorrectLampsForSquare()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamps_returnsCorrectReducedLampsForOpenRingShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateLamps_returnsCorrectReducedLampsForZShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateRectangles_returnsCorrectIntersectionsForArcShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateRectangles_returnsCorrectIntersectionsForPlusShape()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_getCandidateRectangles_returnsCorrectIntersectionsForSquare()"},{"p":"Algorithm_Component","c":"SolverTest","l":"Solver_toSortedArray_convertsAndSortsIntegerSet()"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"Solver(Room)","url":"%3Cinit%3E(fernuni.propra.file_processing.Room)"},{"p":"Algorithm_Component","c":"SolverTest","l":"SolverTest()","url":"%3Cinit%3E()"},{"p":"Algorithm_Component","c":"API_Test_Solution","l":"solves100a()"},{"p":"Algorithm_Component","c":"API_Test_Solution","l":"solves100b()"},{"p":"Algorithm_Component","c":"API_Test_Solution","l":"solves20a()"},{"p":"Algorithm_Component","c":"API_Test_Solution","l":"solves20b()"},{"p":"Algorithm_Component","c":"API_Test_Solution","l":"solves20c()"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"SOUTH"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"switchOff()"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"switchOn()"},{"p":"fernuni.propra.test","c":"TestHelper","l":"TestHelper()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.algorithm","c":"TimeLimitExceededException","l":"TimeLimitExceededException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"fernuni.propra.algorithm","c":"Solver","l":"toSortedArray(Set<Integer>)","url":"toSortedArray(java.util.Set)"},{"p":"fernuni.propra.algorithm","c":"Lamp","l":"toString()"},{"p":"fernuni.propra.user_interface","c":"UserInterface","l":"UserInterface(String, Room)","url":"%3Cinit%3E(java.lang.String,fernuni.propra.file_processing.Room)"},{"p":"fernuni.propra.algorithm","c":"Validator","l":"validate()"},{"p":"Algorithm_Component","c":"API_Test_Solution","l":"validateFileHasToBeValid()"},{"p":"Algorithm_Component","c":"API_Test_Validation","l":"validateFileHasToBeValid()"},{"p":"fernuni.propra.algorithm","c":"Ausleuchtung","l":"validateSolution(String)","url":"validateSolution(java.lang.String)"},{"p":"fernuni.propra.algorithm","c":"IAusleuchtung","l":"validateSolution(String)","url":"validateSolution(java.lang.String)"},{"p":"Algorithm_Component","c":"API_Test_Validation","l":"validateTrueNegative()"},{"p":"Algorithm_Component","c":"API_Test_Validation","l":"validateTruePositive()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsFalseForLampsOutsideOfRoomInSquareRoom()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsFalseForNoLampsInSquareRoom()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsFalseForOneLampInArcShapedRoom()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsFalseForOpenRingShapedRoomWithTooFewLamps()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsTrueForValidArcShapedRoom()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsTrueForValidArcShapedRoomWithMoreLampsThanNecessary()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsTrueForValidOpenRingShapedRoom()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsTrueForValidOpenRingShapedRoomWithAlternativeLamps()"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"Validator_validate_returnsTrueForValidSquareRoom()"},{"p":"fernuni.propra.algorithm","c":"Validator","l":"Validator(Room)","url":"%3Cinit%3E(fernuni.propra.file_processing.Room)"},{"p":"Algorithm_Component","c":"ValidatorTest","l":"ValidatorTest()","url":"%3Cinit%3E()"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"fernuni.propra.file_processing","c":"Orientation","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"values()"},{"p":"fernuni.propra.file_processing","c":"Orientation","l":"values()"},{"p":"fernuni.propra.file_processing","c":"Orientation","l":"VERTICAL"},{"p":"fernuni.propra.file_processing","c":"Direction","l":"WEST"},{"p":"fernuni.propra.file_processing","c":"XmlWriter","l":"writeXml(String)","url":"writeXml(java.lang.String)"},{"p":"fernuni.propra.file_processing","c":"XmlReader","l":"XmlReader(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"fernuni.propra.file_processing","c":"XmlWriter","l":"XmlWriter(Room)","url":"%3Cinit%3E(fernuni.propra.file_processing.Room)"}]